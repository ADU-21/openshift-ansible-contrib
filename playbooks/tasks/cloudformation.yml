- name: Launch the CloudFormation Template
  cloudformation:
    region: "{{ ec2_region }}"
    stack_name: openshift-demo-{{ cluster_id }}
    state: present
    tags:
      openshift-demo: "{{ cluster_id }}"
    template: files/cloudformation.json
    template_parameters:
      Route53HostedZone: "{{ r53_hosted_zone }}."
      MasterApiPort: "{{ api_port }}"
      MasterHealthTarget: "TCP:{{ api_port }}"
      MasterClusterHostname: openshift.internal.hosts.{{ r53_hosted_zone }}
      MasterClusterPublicHostname: openshift.hosts.{{ r53_hosted_zone }}
      AppWildcardDomain: "*.apps.{{ r53_hosted_zone }}"
      SshSgId: "sg-eae64983"
      EtcdSgId: "sg-eae64983"
      MasterExtElbSgId: "sg-eae64983"
      MasterIntElbSgId: "sg-eae64983"
      InfraElbSgId: "sg-eae64983"
      InfraSgId: "sg-eae64983"
      NodeSgId: "sg-eae64983"
      MasterSgId: "sg-eae64983"
      Subnets: "subnet-cf57c596"
      SubnetAvailabilityZones: "us-east-1d"
      #SubnetAvailabilityZones: "{{ vpc_subnet_azs }}"
      KeyName: libra
      NumMasters: "{{ os_defaults.masters.count }}"
      MasterInstanceType: "{{ os_defaults.masters.instance_type }}"
      MasterImageId: "{{ ec2_image }}"
      MasterUserData: "{{ lookup('template', '../templates/user_data_master.j2') | b64encode }}"
      MasterRootVolSize: "{{ os_defaults.masters.vol_sizes.root }}"
      MasterRootVolType: gp2
      MasterDockerVolSize: "{{ os_defaults.masters.vol_sizes.docker }}"
      MasterDockerVolType: gp2
      MasterEtcdVolSize: "{{ os_defaults.masters.vol_sizes.etcd }}"
      MasterEtcdVolType: gp2
      NumInfra: "{{ os_defaults.infra_nodes.count }}"
      InfraInstanceType: "{{ os_defaults.infra_nodes.instance_type }}"
      InfraImageId: "{{ ec2_image }}"
      InfraUserData: "{{ lookup('template', '../templates/user_data_node.j2') | b64encode }}"
      InfraRootVolSize: "{{ os_defaults.infra_nodes.vol_sizes.root }}"
      InfraRootVolType: gp2
      InfraDockerVolSize: "{{ os_defaults.infra_nodes.vol_sizes.docker }}"
      InfraDockerVolType: gp2
      NumNodes: "{{ os_defaults.app_nodes.count }}"
      NodesInstanceType: "{{ os_defaults.app_nodes.instance_type }}"
      NodeImageId: "{{ ec2_image }}"
      NodeUserData: "{{ lookup('template', '../templates/user_data_node.j2') | b64encode }}"
      NodeRootVolSize: "{{ os_defaults.app_nodes.vol_sizes.root }}"
      NodeRootVolType: gp2
      NodeDockerVolSize: "{{ os_defaults.app_nodes.vol_sizes.docker }}"
      NodeDockerVolType: gp2
#  register: cf_output

#- name: Store CloudFormation-generated volume IDs as facts
#  set_fact:
#    registry_volume: "{{ cf_output.stack_outputs.RegistryVolumeID }}"
#    metrics_volume: "{{ cf_output.stack_outputs.MetricsVolumeID }}"
#    logging_volume: "{{ cf_output.stack_outputs.LoggingVolumeID }}"


